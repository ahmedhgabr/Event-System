//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Milestone2Entities : DbContext
    {
        public Milestone2Entities()
            : base("name=Milestone2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Club> Clubs { get; set; }
        public virtual DbSet<ClubRepresentative> ClubRepresentatives { get; set; }
        public virtual DbSet<Fan> Fans { get; set; }
        public virtual DbSet<HostRequest> HostRequests { get; set; }
        public virtual DbSet<Match> Matches { get; set; }
        public virtual DbSet<SportsAssociationManager> SportsAssociationManagers { get; set; }
        public virtual DbSet<Stadium> Stadia { get; set; }
        public virtual DbSet<StadiumManager> StadiumManagers { get; set; }
        public virtual DbSet<SystemAdmin> SystemAdmins { get; set; }
        public virtual DbSet<SystemUser> SystemUsers { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<allFan> allFans { get; set; }
    
        [DbFunction("Milestone2Entities", "allPendingRequests")]
        public virtual IQueryable<allPendingRequests_Result> allPendingRequests(string sM)
        {
            var sMParameter = sM != null ?
                new ObjectParameter("SM", sM) :
                new ObjectParameter("SM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<allPendingRequests_Result>("[Milestone2Entities].[allPendingRequests](@SM)", sMParameter);
        }
    
        [DbFunction("Milestone2Entities", "allUnassignedMatches")]
        public virtual IQueryable<allUnassignedMatches_Result> allUnassignedMatches(string hostClub)
        {
            var hostClubParameter = hostClub != null ?
                new ObjectParameter("HostClub", hostClub) :
                new ObjectParameter("HostClub", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<allUnassignedMatches_Result>("[Milestone2Entities].[allUnassignedMatches](@HostClub)", hostClubParameter);
        }
    
        [DbFunction("Milestone2Entities", "availableMatchesToAttend")]
        public virtual IQueryable<availableMatchesToAttend_Result> availableMatchesToAttend(Nullable<System.DateTime> d)
        {
            var dParameter = d.HasValue ?
                new ObjectParameter("D", d) :
                new ObjectParameter("D", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<availableMatchesToAttend_Result>("[Milestone2Entities].[availableMatchesToAttend](@D)", dParameter);
        }
    
        [DbFunction("Milestone2Entities", "matchWithHighestAttendance")]
        public virtual IQueryable<matchWithHighestAttendance_Result> matchWithHighestAttendance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<matchWithHighestAttendance_Result>("[Milestone2Entities].[matchWithHighestAttendance]()");
        }
    
        [DbFunction("Milestone2Entities", "requestsFromClub")]
        public virtual IQueryable<requestsFromClub_Result> requestsFromClub(string stadiumName, string clubName)
        {
            var stadiumNameParameter = stadiumName != null ?
                new ObjectParameter("stadiumName", stadiumName) :
                new ObjectParameter("stadiumName", typeof(string));
    
            var clubNameParameter = clubName != null ?
                new ObjectParameter("clubName", clubName) :
                new ObjectParameter("clubName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<requestsFromClub_Result>("[Milestone2Entities].[requestsFromClub](@stadiumName, @clubName)", stadiumNameParameter, clubNameParameter);
        }
    
        [DbFunction("Milestone2Entities", "upcomingMatchesOfClub")]
        public virtual IQueryable<upcomingMatchesOfClub_Result> upcomingMatchesOfClub(string c)
        {
            var cParameter = c != null ?
                new ObjectParameter("C", c) :
                new ObjectParameter("C", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<upcomingMatchesOfClub_Result>("[Milestone2Entities].[upcomingMatchesOfClub](@C)", cParameter);
        }
    
        [DbFunction("Milestone2Entities", "viewAvailableStadiumsOn")]
        public virtual IQueryable<viewAvailableStadiumsOn_Result> viewAvailableStadiumsOn(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<viewAvailableStadiumsOn_Result>("[Milestone2Entities].[viewAvailableStadiumsOn](@date)", dateParameter);
        }
    
        public virtual int acceptRequest(string stadiumManagerUserName, string hostName, string guestName, Nullable<System.DateTime> time)
        {
            var stadiumManagerUserNameParameter = stadiumManagerUserName != null ?
                new ObjectParameter("StadiumManagerUserName", stadiumManagerUserName) :
                new ObjectParameter("StadiumManagerUserName", typeof(string));
    
            var hostNameParameter = hostName != null ?
                new ObjectParameter("HostName", hostName) :
                new ObjectParameter("HostName", typeof(string));
    
            var guestNameParameter = guestName != null ?
                new ObjectParameter("GuestName", guestName) :
                new ObjectParameter("GuestName", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("acceptRequest", stadiumManagerUserNameParameter, hostNameParameter, guestNameParameter, timeParameter);
        }
    
        public virtual int addAssociationManager(string associationManager, string username, string password)
        {
            var associationManagerParameter = associationManager != null ?
                new ObjectParameter("AssociationManager", associationManager) :
                new ObjectParameter("AssociationManager", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addAssociationManager", associationManagerParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int addClub(string club, string clublocation)
        {
            var clubParameter = club != null ?
                new ObjectParameter("club", club) :
                new ObjectParameter("club", typeof(string));
    
            var clublocationParameter = clublocation != null ?
                new ObjectParameter("clublocation", clublocation) :
                new ObjectParameter("clublocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addClub", clubParameter, clublocationParameter);
        }
    
        public virtual int addFan(string name, string username, string password, string nationalID, string address, string phone, Nullable<System.DateTime> birthDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addFan", nameParameter, usernameParameter, passwordParameter, nationalIDParameter, addressParameter, phoneParameter, birthDateParameter);
        }
    
        public virtual int addHostRequest(string clubName, string stadiumName, Nullable<System.DateTime> startTime)
        {
            var clubNameParameter = clubName != null ?
                new ObjectParameter("ClubName", clubName) :
                new ObjectParameter("ClubName", typeof(string));
    
            var stadiumNameParameter = stadiumName != null ?
                new ObjectParameter("StadiumName", stadiumName) :
                new ObjectParameter("StadiumName", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addHostRequest", clubNameParameter, stadiumNameParameter, startTimeParameter);
        }
    
        public virtual int addNewMatch(string hostclub, string guestclub, Nullable<System.DateTime> starttime, Nullable<System.DateTime> endtime)
        {
            var hostclubParameter = hostclub != null ?
                new ObjectParameter("hostclub", hostclub) :
                new ObjectParameter("hostclub", typeof(string));
    
            var guestclubParameter = guestclub != null ?
                new ObjectParameter("guestclub", guestclub) :
                new ObjectParameter("guestclub", typeof(string));
    
            var starttimeParameter = starttime.HasValue ?
                new ObjectParameter("starttime", starttime) :
                new ObjectParameter("starttime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addNewMatch", hostclubParameter, guestclubParameter, starttimeParameter, endtimeParameter);
        }
    
        public virtual int addRepresentative(string name, string clubName, string username, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var clubNameParameter = clubName != null ?
                new ObjectParameter("ClubName", clubName) :
                new ObjectParameter("ClubName", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addRepresentative", nameParameter, clubNameParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int addStadium(string stadium, string location, Nullable<int> capacity)
        {
            var stadiumParameter = stadium != null ?
                new ObjectParameter("stadium", stadium) :
                new ObjectParameter("stadium", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("capacity", capacity) :
                new ObjectParameter("capacity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addStadium", stadiumParameter, locationParameter, capacityParameter);
        }
    
        public virtual int addStadiumManager(string name, string stadiumName, string username, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var stadiumNameParameter = stadiumName != null ?
                new ObjectParameter("StadiumName", stadiumName) :
                new ObjectParameter("StadiumName", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addStadiumManager", nameParameter, stadiumNameParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int addTicket(string hostclub, string guestclub, Nullable<System.DateTime> starttime)
        {
            var hostclubParameter = hostclub != null ?
                new ObjectParameter("hostclub", hostclub) :
                new ObjectParameter("hostclub", typeof(string));
    
            var guestclubParameter = guestclub != null ?
                new ObjectParameter("guestclub", guestclub) :
                new ObjectParameter("guestclub", typeof(string));
    
            var starttimeParameter = starttime.HasValue ?
                new ObjectParameter("starttime", starttime) :
                new ObjectParameter("starttime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addTicket", hostclubParameter, guestclubParameter, starttimeParameter);
        }
    
        public virtual int blockFan(string nationalID)
        {
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("blockFan", nationalIDParameter);
        }
    
        public virtual int clearAllTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("clearAllTables");
        }
    
        public virtual int createAllTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createAllTables");
        }
    
        public virtual int deleteClub(string club)
        {
            var clubParameter = club != null ?
                new ObjectParameter("club", club) :
                new ObjectParameter("club", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteClub", clubParameter);
        }
    
        public virtual int deleteMatch(string hostclub, string guestclub)
        {
            var hostclubParameter = hostclub != null ?
                new ObjectParameter("hostclub", hostclub) :
                new ObjectParameter("hostclub", typeof(string));
    
            var guestclubParameter = guestclub != null ?
                new ObjectParameter("guestclub", guestclub) :
                new ObjectParameter("guestclub", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMatch", hostclubParameter, guestclubParameter);
        }
    
        public virtual int deleteMatchesOnStadium(string stadium)
        {
            var stadiumParameter = stadium != null ?
                new ObjectParameter("stadium", stadium) :
                new ObjectParameter("stadium", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMatchesOnStadium", stadiumParameter);
        }
    
        public virtual int deleteStadium(string stadium)
        {
            var stadiumParameter = stadium != null ?
                new ObjectParameter("stadium", stadium) :
                new ObjectParameter("stadium", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteStadium", stadiumParameter);
        }
    
        public virtual int dropAllProceduresFunctionsViews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dropAllProceduresFunctionsViews");
        }
    
        public virtual int dropAllTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dropAllTables");
        }
    
        public virtual int findClub(string clubName, ObjectParameter cid)
        {
            var clubNameParameter = clubName != null ?
                new ObjectParameter("clubName", clubName) :
                new ObjectParameter("clubName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("findClub", clubNameParameter, cid);
        }
    
        public virtual int findMatch(string hClubName, string guestClubName, Nullable<System.DateTime> date, ObjectParameter m)
        {
            var hClubNameParameter = hClubName != null ?
                new ObjectParameter("hClubName", hClubName) :
                new ObjectParameter("hClubName", typeof(string));
    
            var guestClubNameParameter = guestClubName != null ?
                new ObjectParameter("guestClubName", guestClubName) :
                new ObjectParameter("guestClubName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("findMatch", hClubNameParameter, guestClubNameParameter, dateParameter, m);
        }
    
        public virtual int findStaduim(string staduimName, ObjectParameter sid)
        {
            var staduimNameParameter = staduimName != null ?
                new ObjectParameter("staduimName", staduimName) :
                new ObjectParameter("staduimName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("findStaduim", staduimNameParameter, sid);
        }
    
        public virtual int purchaseTicket(string n_id, string hClubName, string guestClubName, Nullable<System.DateTime> date)
        {
            var n_idParameter = n_id != null ?
                new ObjectParameter("n_id", n_id) :
                new ObjectParameter("n_id", typeof(string));
    
            var hClubNameParameter = hClubName != null ?
                new ObjectParameter("hClubName", hClubName) :
                new ObjectParameter("hClubName", typeof(string));
    
            var guestClubNameParameter = guestClubName != null ?
                new ObjectParameter("guestClubName", guestClubName) :
                new ObjectParameter("guestClubName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("purchaseTicket", n_idParameter, hClubNameParameter, guestClubNameParameter, dateParameter);
        }
    
        public virtual int rejectRequest(string stadiumManagerName, string hostName, string guestName, Nullable<System.DateTime> time)
        {
            var stadiumManagerNameParameter = stadiumManagerName != null ?
                new ObjectParameter("StadiumManagerName", stadiumManagerName) :
                new ObjectParameter("StadiumManagerName", typeof(string));
    
            var hostNameParameter = hostName != null ?
                new ObjectParameter("HostName", hostName) :
                new ObjectParameter("HostName", typeof(string));
    
            var guestNameParameter = guestName != null ?
                new ObjectParameter("GuestName", guestName) :
                new ObjectParameter("GuestName", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rejectRequest", stadiumManagerNameParameter, hostNameParameter, guestNameParameter, timeParameter);
        }
    
        public virtual int unblockFan(string nationalID)
        {
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("unblockFan", nationalIDParameter);
        }
    
        public virtual int updateMatchHost(string hClubName, string guestClubName, Nullable<System.DateTime> date)
        {
            var hClubNameParameter = hClubName != null ?
                new ObjectParameter("hClubName", hClubName) :
                new ObjectParameter("hClubName", typeof(string));
    
            var guestClubNameParameter = guestClubName != null ?
                new ObjectParameter("guestClubName", guestClubName) :
                new ObjectParameter("guestClubName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateMatchHost", hClubNameParameter, guestClubNameParameter, dateParameter);
        }
    }
}
